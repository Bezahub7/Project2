[
  {
    "objectID": "data_preparation.html",
    "href": "data_preparation.html",
    "title": "Project 2: data preparation",
    "section": "",
    "text": "Load the necessary packages.\n\n# Require will load the package if available and return FALSE if not available by adding the ! we will return TRUE if the package is not available, running the code in the if statement\nif(!require(tidyverse)){\n    # If package is not available, install it then load it again\n    install.packages(\"tidyverse\")\n    library(tidyverse)\n}\n\nLoading required package: tidyverse\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Does same as above for other packages\nif(!require(tidyr)){\n    install.packages(\"tidyr\")\n    library(tidyr)\n}\n\nif(!require(readr)){\n    install.packages(\"readr\")\n    library(readr)\n}\n\nif(!require(ggplot2)){\n    install.packages(\"ggplot2\")\n    library(ggplot2)\n}\n\nif(!require(dplyr)){\n    install.packages(\"dplyr\")\n    library(dplyr)\n}\n\nif(!require(janitor)){\n    install.packages(\"janitor\")\n    library(janitor)\n}  \n\nLoading required package: janitor\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nif(!require(reshape2)){\n    install.packages(\"reshape2\")\n    library(reshape2)\n}\n\nLoading required package: reshape2\n\nAttaching package: 'reshape2'\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\n\n#Prepare your data ## Read in the dataset\nI will be using the “Mobile Device Usage and User Behavior Dataset” from kaggle for this project.\n\nuserBehavior &lt;- read_csv(\"./data/user_behavior_dataset.csv\")\n\nRows: 700 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Device Model, Operating System, Gender\ndbl (8): User ID, App Usage Time (min/day), Screen On Time (hours/day), Batt...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nuserBehavior\n\n# A tibble: 700 × 11\n   `User ID` `Device Model`     `Operating System` `App Usage Time (min/day)`\n       &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;\n 1         1 Google Pixel 5     Android                                   393\n 2         2 OnePlus 9          Android                                   268\n 3         3 Xiaomi Mi 11       Android                                   154\n 4         4 Google Pixel 5     Android                                   239\n 5         5 iPhone 12          iOS                                       187\n 6         6 Google Pixel 5     Android                                    99\n 7         7 Samsung Galaxy S21 Android                                   350\n 8         8 OnePlus 9          Android                                   543\n 9         9 Samsung Galaxy S21 Android                                   340\n10        10 iPhone 12          iOS                                       424\n# ℹ 690 more rows\n# ℹ 7 more variables: `Screen On Time (hours/day)` &lt;dbl&gt;,\n#   `Battery Drain (mAh/day)` &lt;dbl&gt;, `Number of Apps Installed` &lt;dbl&gt;,\n#   `Data Usage (MB/day)` &lt;dbl&gt;, Age &lt;dbl&gt;, Gender &lt;chr&gt;,\n#   `User Behavior Class` &lt;dbl&gt;\n\n# Janitor automatically fixes spaces, parentheses, slashes, and symbols\nuserBehavior &lt;- userBehavior |&gt;\n  clean_names()\nuserBehavior\n\n# A tibble: 700 × 11\n   user_id device_model       operating_system app_usage_time_min_day\n     &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;                             &lt;dbl&gt;\n 1       1 Google Pixel 5     Android                             393\n 2       2 OnePlus 9          Android                             268\n 3       3 Xiaomi Mi 11       Android                             154\n 4       4 Google Pixel 5     Android                             239\n 5       5 iPhone 12          iOS                                 187\n 6       6 Google Pixel 5     Android                              99\n 7       7 Samsung Galaxy S21 Android                             350\n 8       8 OnePlus 9          Android                             543\n 9       9 Samsung Galaxy S21 Android                             340\n10      10 iPhone 12          iOS                                 424\n# ℹ 690 more rows\n# ℹ 7 more variables: screen_on_time_hours_day &lt;dbl&gt;,\n#   battery_drain_m_ah_day &lt;dbl&gt;, number_of_apps_installed &lt;dbl&gt;,\n#   data_usage_mb_day &lt;dbl&gt;, age &lt;dbl&gt;, gender &lt;chr&gt;, user_behavior_class &lt;dbl&gt;\n\n\n\n\n\n#create a categorical variable based on a numeric variable age to create an age group and recode user_behavior_class variable to add descriptive label as the values are numeric 1-5.\nuserBehavior &lt;- userBehavior |&gt;\n  mutate(age_group = case_when(\n    age &lt; 18 ~ \"Under 18\",\n    age &gt;= 18 & age &lt; 25 ~ \"18-24\",\n    age &gt;= 25 & age &lt; 35 ~ \"25-34\",\n    age &gt;= 35 & age &lt; 45 ~ \"35-44\",\n    age &gt;= 45 & age &lt; 60 ~ \"45-59\",\n    age &gt;= 60 ~ \"60+\",\n    TRUE ~ NA_character_\n  ),\n  user_behavior_class_label = case_when(\n    user_behavior_class == 1 ~ \"Minimal User\",\n    user_behavior_class == 2 ~ \"Light User\",\n    user_behavior_class == 3 ~ \"Moderate User\",\n    user_behavior_class == 4 ~ \"Heavy User\",\n    user_behavior_class == 5 ~ \"Power User\",\n    TRUE ~ NA_character_))\n\n# change datatype from character to factor, dbl to character for user ID.\nuserBehavior &lt;- userBehavior |&gt;\n  mutate(user_id=as.character(user_id),\n         operating_system = as.factor(operating_system),\n         gender = as.factor(gender),\n         user_behavior_class = as.factor(user_behavior_class)\n         )\n\n# to maintain my order and not let R order it alphabetically \nuserBehavior$user_behavior_class_label &lt;- factor(\n  userBehavior$user_behavior_class_label,\n  levels = c(\"Minimal User\", \"Light User\", \"Moderate User\", \"Heavy User\", \"Power User\"),\n  ordered = TRUE\n)\nuserBehavior\n\n# A tibble: 700 × 13\n   user_id device_model       operating_system app_usage_time_min_day\n   &lt;chr&gt;   &lt;chr&gt;              &lt;fct&gt;                             &lt;dbl&gt;\n 1 1       Google Pixel 5     Android                             393\n 2 2       OnePlus 9          Android                             268\n 3 3       Xiaomi Mi 11       Android                             154\n 4 4       Google Pixel 5     Android                             239\n 5 5       iPhone 12          iOS                                 187\n 6 6       Google Pixel 5     Android                              99\n 7 7       Samsung Galaxy S21 Android                             350\n 8 8       OnePlus 9          Android                             543\n 9 9       Samsung Galaxy S21 Android                             340\n10 10      iPhone 12          iOS                                 424\n# ℹ 690 more rows\n# ℹ 9 more variables: screen_on_time_hours_day &lt;dbl&gt;,\n#   battery_drain_m_ah_day &lt;dbl&gt;, number_of_apps_installed &lt;dbl&gt;,\n#   data_usage_mb_day &lt;dbl&gt;, age &lt;dbl&gt;, gender &lt;fct&gt;,\n#   user_behavior_class &lt;fct&gt;, age_group &lt;chr&gt;, user_behavior_class_label &lt;ord&gt;\n\n\n\n\n\n\n\n\n#these one way contingency tables show the gender, operating system and user behavior distribution in the dataset.\ntab_gender &lt;- table(userBehavior$gender)\ntab_gender\n\n\nFemale   Male \n   336    364 \n\ntab_operating_system &lt;- table(userBehavior$operating_system)\ntab_operating_system\n\n\nAndroid     iOS \n    554     146 \n\ntab_behavior_class &lt;- table(userBehavior$user_behavior_class_label)\ntab_behavior_class\n\n\n Minimal User    Light User Moderate User    Heavy User    Power User \n          136           146           143           139           136 \n\n\n\n\n\n\n# Two-way tables (joint frequency)\ntable_behavior_os &lt;- table(userBehavior$user_behavior_class_label, userBehavior$operating_system)\ntable_behavior_os\n\n               \n                Android iOS\n  Minimal User      114  22\n  Light User        114  32\n  Moderate User     111  32\n  Heavy User        110  29\n  Power User        105  31\n\ntable_behavior_gender &lt;- table(userBehavior$gender , userBehavior$user_behavior_class_label )\ntable_behavior_gender\n\n        \n         Minimal User Light User Moderate User Heavy User Power User\n  Female           63         64            82         67         60\n  Male             73         82            61         72         76\n\ntable_os_gender &lt;- table(userBehavior$operating_system, userBehavior$gender)\ntable_os_gender\n\n         \n          Female Male\n  Android    262  292\n  iOS         74   72\n\nprop.table(table_os_gender, margin = 2)  # proportions within gender\n\n         \n             Female      Male\n  Android 0.7797619 0.8021978\n  iOS     0.2202381 0.1978022\n\n\n\n\n\n\n# we can use the across() function and summarize all numeric variables at once \nuserBehavior |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = mean, \"median\" = median,\"Std\"=sd) , \n                   .names = \"{.fn}_{.col}\"))\n\n# A tibble: 1 × 18\n  mean_app_usage_time_min_day median_app_usage_time_min…¹ Std_app_usage_time_m…²\n                        &lt;dbl&gt;                       &lt;dbl&gt;                  &lt;dbl&gt;\n1                        271.                        228.                   177.\n# ℹ abbreviated names: ¹​median_app_usage_time_min_day,\n#   ²​Std_app_usage_time_min_day\n# ℹ 15 more variables: mean_screen_on_time_hours_day &lt;dbl&gt;,\n#   median_screen_on_time_hours_day &lt;dbl&gt;, Std_screen_on_time_hours_day &lt;dbl&gt;,\n#   mean_battery_drain_m_ah_day &lt;dbl&gt;, median_battery_drain_m_ah_day &lt;dbl&gt;,\n#   Std_battery_drain_m_ah_day &lt;dbl&gt;, mean_number_of_apps_installed &lt;dbl&gt;,\n#   median_number_of_apps_installed &lt;dbl&gt;, …\n\n# This is summary of quantitative variables by user behavior classes (categorical). \nuserBehavior |&gt;\n  group_by(user_behavior_class_label) |&gt;\n  summarise(\n    mean_app_usage = mean(app_usage_time_min_day, na.rm = TRUE),\n    median_app_usage = median(app_usage_time_min_day, na.rm = TRUE),\n    sd_app_usage = sd(app_usage_time_min_day, na.rm = TRUE),\n    mean_data_usage = mean(data_usage_mb_day, na.rm = TRUE),\n    median_data_usage = median(data_usage_mb_day, na.rm = TRUE),\n    sd_data_usage = sd(data_usage_mb_day, na.rm = TRUE)\n    \n  )\n\n# A tibble: 5 × 7\n  user_behavior_class_label mean_app_usage median_app_usage sd_app_usage\n  &lt;ord&gt;                              &lt;dbl&gt;            &lt;dbl&gt;        &lt;dbl&gt;\n1 Minimal User                        60.4              64          17.2\n2 Light User                         132.              132.         25.5\n3 Moderate User                      235.              229          34.1\n4 Heavy User                         396.              405          52.2\n5 Power User                         541.              540          31.1\n# ℹ 3 more variables: mean_data_usage &lt;dbl&gt;, median_data_usage &lt;dbl&gt;,\n#   sd_data_usage &lt;dbl&gt;\n\n\n\n\n\n\n\n\nggplot(userBehavior|&gt; drop_na(user_behavior_class_label), aes(x = user_behavior_class_label, fill = user_behavior_class_label)) +\n  geom_bar() +\n  scale_fill_manual(\n    values = c(\n      \"Minimal User\" = \"#00B050\",   # green\n      \"Light User\"   = \"#92D050\",   # light green\n      \"Moderate User\"= \"#FFC000\",   # yellow\n      \"Heavy User\"   = \"#FF7043\",   # orange\n      \"Power User\"   = \"#C00000\"    # red\n    ),\n     name = \"User Behavior Classes\"\n  ) +\n  labs(title = \"Distribution of User Behavior Classes\",\n       x = \"User Behavior Class\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(userBehavior |&gt; drop_na(user_behavior_class, app_usage_time_min_day), \n       aes(x = user_behavior_class, y = app_usage_time_min_day, fill = user_behavior_class_label)) +\n  geom_boxplot() +\n   scale_fill_manual(\n    values = c(\n      \"Minimal User\" = \"#00B050\",   # green\n      \"Light User\"   = \"#92D050\",   # light green\n      \"Moderate User\"= \"#FFC000\",   # yellow\n      \"Heavy User\"   = \"#FF7043\",   # orange\n      \"Power User\"   = \"#C00000\"    # red\n    ),\n     name = \"User Behavior Classes\"\n   ) +\n  labs(title = \"App Usage Time by User Behavior Class\",\n       x = \"User Behavior Class\", y = \"App Usage (min/day)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nl\n\ng &lt;- ggplot(userBehavior |&gt; drop_na(app_usage_time_min_day, age_group) ,\n aes(x = age_group, y = app_usage_time_min_day, fill = age_group))\ng + geom_boxplot() +\n \n  labs(\n    title = \"App Usage by Age Group\",\n    y = \"App Usage (min/day)\",\n    x = \"Age Group\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\ng &lt;- ggplot(data = userBehavior |&gt; drop_na(gender, operating_system), aes(x = gender, fill = operating_system))\ng + geom_bar(position = \"dodge\")+\n  labs(title = \"Operating System Type by Gender\", \n       x = \"Gender\")+\n scale_fill_discrete(\"Operating System\")\n\n\n\n\n\n\n\n\n\n\n\n\n# Multivariate (Behavior class X Gender)\nggplot(userBehavior, aes(x = user_behavior_class, y = data_usage_mb_day, fill = gender)) +\n  geom_boxplot(position = position_dodge(width = 0.8)) +\n  labs(title = \"Data Usage by Behavior Class and Gender\",\n       x = \"User Behavior Class\", y = \"Data Usage (MB/day)\", fill = \"Gender\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(userBehavior, aes(x = app_usage_time_min_day, y = data_usage_mb_day, color = operating_system)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  labs(title = \"Relationship Between App Usage and Data Usage by OS\",\n       x = \"App Usage (min/day)\", y = \"Data Usage (MB/day)\", color = \"OS\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(userBehavior, aes(x = number_of_apps_installed,\n                 y = screen_on_time_hours_day,\n                 color = age_group,\n                 size = age_group,\n                 )) +\n  geom_point(alpha = 0.7, size = 3)  +\n scale_color_brewer(palette = \"Spectral\")  +\n  labs(\n    title = \"Screen Time vs Number of Apps by Age Group\",\n    x = \"Number of Apps Installed\",\n    y = \"Screen On Time (hours/day)\",\n    color = \"Age Group\",\n    \n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nl\n\ng &lt;- ggplot(userBehavior |&gt; drop_na(screen_on_time_hours_day, gender) ,\n aes(x = gender, y = screen_on_time_hours_day, fill = gender))\ng + geom_boxplot() +\n geom_jitter(width = 0.2, alpha = 0.3)+\n  labs(\n    title = \"Screen Time  by Gender\",\n    y = \"Screen On Time (hours/day)\",\n    x = \"Gender\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nuserBehavior |&gt;\n  select(user_behavior_class, app_usage_time_min_day, screen_on_time_hours_day, battery_drain_m_ah_day) |&gt;\n  pivot_longer(-user_behavior_class, names_to = \"metric\", values_to = \"value\") |&gt;\n  ggplot(aes(x = user_behavior_class, y = value, fill = user_behavior_class)) +\n  geom_boxplot() +\n  facet_wrap(~ metric, scales = \"free_y\") +\n  labs(title = \"Device Metrics by User Behavior Class\",\n       x = \"User Behavior Class\", y = \"Value\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nInsight: Reveals which devices or OS are more power-efficient under high usage.\n\nggplot(userBehavior, aes(x = battery_drain_m_ah_day,\n                 y = screen_on_time_hours_day,\n                 color = device_model)) +\n  geom_point(alpha = 0.7, size = 2.5) +\n  facet_wrap(~operating_system) +\n  labs(\n    title = \"Battery drain vs Screen Time by Operating System\",\n    x = \"Battery Drain (Min/day)\",\n    y = \"Screen On Time (hours/day)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Select numeric variables\n# Select numeric variables\nnum_vars &lt;- userBehavior %&gt;%\n  select(app_usage_time_min_day, screen_on_time_hours_day,\n         battery_drain_m_ah_day, number_of_apps_installed,\n         data_usage_mb_day, age)\n\n# Compute correlation matrix\ncor_matrix &lt;- round(cor(num_vars, use = \"pairwise.complete.obs\"), 2)\n\n# Melt for ggplot\ncor_long &lt;- melt(cor_matrix)\n\n# Plot heatmap (0 to 1 scale)\nggplot(cor_long, aes(Var1, Var2, fill = value)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = round(value, 2)), color = \"black\", size = 3) +\n  scale_fill_gradientn(\n    colours = c(\"white\", \"yellow\", \"orange\", \"red\", \"darkred\"),\n    limits  = c(0, 1),\n    name    = \"Correlation\"\n  ) +\n  labs(title = \"Heatmap of Positive Correlations (0–1)\",\n       x = NULL, y = NULL) +\n  theme_minimal(base_size = 12) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "data_preparation.html#data-manipulation",
    "href": "data_preparation.html#data-manipulation",
    "title": "Project 2: data preparation",
    "section": "",
    "text": "#create a categorical variable based on a numeric variable age to create an age group and recode user_behavior_class variable to add descriptive label as the values are numeric 1-5.\nuserBehavior &lt;- userBehavior |&gt;\n  mutate(age_group = case_when(\n    age &lt; 18 ~ \"Under 18\",\n    age &gt;= 18 & age &lt; 25 ~ \"18-24\",\n    age &gt;= 25 & age &lt; 35 ~ \"25-34\",\n    age &gt;= 35 & age &lt; 45 ~ \"35-44\",\n    age &gt;= 45 & age &lt; 60 ~ \"45-59\",\n    age &gt;= 60 ~ \"60+\",\n    TRUE ~ NA_character_\n  ),\n  user_behavior_class_label = case_when(\n    user_behavior_class == 1 ~ \"Minimal User\",\n    user_behavior_class == 2 ~ \"Light User\",\n    user_behavior_class == 3 ~ \"Moderate User\",\n    user_behavior_class == 4 ~ \"Heavy User\",\n    user_behavior_class == 5 ~ \"Power User\",\n    TRUE ~ NA_character_))\n\n# change datatype from character to factor, dbl to character for user ID.\nuserBehavior &lt;- userBehavior |&gt;\n  mutate(user_id=as.character(user_id),\n         operating_system = as.factor(operating_system),\n         gender = as.factor(gender),\n         user_behavior_class = as.factor(user_behavior_class)\n         )\n\n# to maintain my order and not let R order it alphabetically \nuserBehavior$user_behavior_class_label &lt;- factor(\n  userBehavior$user_behavior_class_label,\n  levels = c(\"Minimal User\", \"Light User\", \"Moderate User\", \"Heavy User\", \"Power User\"),\n  ordered = TRUE\n)\nuserBehavior\n\n# A tibble: 700 × 13\n   user_id device_model       operating_system app_usage_time_min_day\n   &lt;chr&gt;   &lt;chr&gt;              &lt;fct&gt;                             &lt;dbl&gt;\n 1 1       Google Pixel 5     Android                             393\n 2 2       OnePlus 9          Android                             268\n 3 3       Xiaomi Mi 11       Android                             154\n 4 4       Google Pixel 5     Android                             239\n 5 5       iPhone 12          iOS                                 187\n 6 6       Google Pixel 5     Android                              99\n 7 7       Samsung Galaxy S21 Android                             350\n 8 8       OnePlus 9          Android                             543\n 9 9       Samsung Galaxy S21 Android                             340\n10 10      iPhone 12          iOS                                 424\n# ℹ 690 more rows\n# ℹ 9 more variables: screen_on_time_hours_day &lt;dbl&gt;,\n#   battery_drain_m_ah_day &lt;dbl&gt;, number_of_apps_installed &lt;dbl&gt;,\n#   data_usage_mb_day &lt;dbl&gt;, age &lt;dbl&gt;, gender &lt;fct&gt;,\n#   user_behavior_class &lt;fct&gt;, age_group &lt;chr&gt;, user_behavior_class_label &lt;ord&gt;"
  },
  {
    "objectID": "data_preparation.html#explore-the-dataset",
    "href": "data_preparation.html#explore-the-dataset",
    "title": "Project 2: data preparation",
    "section": "",
    "text": "#these one way contingency tables show the gender, operating system and user behavior distribution in the dataset.\ntab_gender &lt;- table(userBehavior$gender)\ntab_gender\n\n\nFemale   Male \n   336    364 \n\ntab_operating_system &lt;- table(userBehavior$operating_system)\ntab_operating_system\n\n\nAndroid     iOS \n    554     146 \n\ntab_behavior_class &lt;- table(userBehavior$user_behavior_class_label)\ntab_behavior_class\n\n\n Minimal User    Light User Moderate User    Heavy User    Power User \n          136           146           143           139           136 \n\n\n\n\n\n\n# Two-way tables (joint frequency)\ntable_behavior_os &lt;- table(userBehavior$user_behavior_class_label, userBehavior$operating_system)\ntable_behavior_os\n\n               \n                Android iOS\n  Minimal User      114  22\n  Light User        114  32\n  Moderate User     111  32\n  Heavy User        110  29\n  Power User        105  31\n\ntable_behavior_gender &lt;- table(userBehavior$gender , userBehavior$user_behavior_class_label )\ntable_behavior_gender\n\n        \n         Minimal User Light User Moderate User Heavy User Power User\n  Female           63         64            82         67         60\n  Male             73         82            61         72         76\n\ntable_os_gender &lt;- table(userBehavior$operating_system, userBehavior$gender)\ntable_os_gender\n\n         \n          Female Male\n  Android    262  292\n  iOS         74   72\n\nprop.table(table_os_gender, margin = 2)  # proportions within gender\n\n         \n             Female      Male\n  Android 0.7797619 0.8021978\n  iOS     0.2202381 0.1978022\n\n\n\n\n\n\n# we can use the across() function and summarize all numeric variables at once \nuserBehavior |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = mean, \"median\" = median,\"Std\"=sd) , \n                   .names = \"{.fn}_{.col}\"))\n\n# A tibble: 1 × 18\n  mean_app_usage_time_min_day median_app_usage_time_min…¹ Std_app_usage_time_m…²\n                        &lt;dbl&gt;                       &lt;dbl&gt;                  &lt;dbl&gt;\n1                        271.                        228.                   177.\n# ℹ abbreviated names: ¹​median_app_usage_time_min_day,\n#   ²​Std_app_usage_time_min_day\n# ℹ 15 more variables: mean_screen_on_time_hours_day &lt;dbl&gt;,\n#   median_screen_on_time_hours_day &lt;dbl&gt;, Std_screen_on_time_hours_day &lt;dbl&gt;,\n#   mean_battery_drain_m_ah_day &lt;dbl&gt;, median_battery_drain_m_ah_day &lt;dbl&gt;,\n#   Std_battery_drain_m_ah_day &lt;dbl&gt;, mean_number_of_apps_installed &lt;dbl&gt;,\n#   median_number_of_apps_installed &lt;dbl&gt;, …\n\n# This is summary of quantitative variables by user behavior classes (categorical). \nuserBehavior |&gt;\n  group_by(user_behavior_class_label) |&gt;\n  summarise(\n    mean_app_usage = mean(app_usage_time_min_day, na.rm = TRUE),\n    median_app_usage = median(app_usage_time_min_day, na.rm = TRUE),\n    sd_app_usage = sd(app_usage_time_min_day, na.rm = TRUE),\n    mean_data_usage = mean(data_usage_mb_day, na.rm = TRUE),\n    median_data_usage = median(data_usage_mb_day, na.rm = TRUE),\n    sd_data_usage = sd(data_usage_mb_day, na.rm = TRUE)\n    \n  )\n\n# A tibble: 5 × 7\n  user_behavior_class_label mean_app_usage median_app_usage sd_app_usage\n  &lt;ord&gt;                              &lt;dbl&gt;            &lt;dbl&gt;        &lt;dbl&gt;\n1 Minimal User                        60.4              64          17.2\n2 Light User                         132.              132.         25.5\n3 Moderate User                      235.              229          34.1\n4 Heavy User                         396.              405          52.2\n5 Power User                         541.              540          31.1\n# ℹ 3 more variables: mean_data_usage &lt;dbl&gt;, median_data_usage &lt;dbl&gt;,\n#   sd_data_usage &lt;dbl&gt;\n\n\n\n\n\n\n\n\nggplot(userBehavior|&gt; drop_na(user_behavior_class_label), aes(x = user_behavior_class_label, fill = user_behavior_class_label)) +\n  geom_bar() +\n  scale_fill_manual(\n    values = c(\n      \"Minimal User\" = \"#00B050\",   # green\n      \"Light User\"   = \"#92D050\",   # light green\n      \"Moderate User\"= \"#FFC000\",   # yellow\n      \"Heavy User\"   = \"#FF7043\",   # orange\n      \"Power User\"   = \"#C00000\"    # red\n    ),\n     name = \"User Behavior Classes\"\n  ) +\n  labs(title = \"Distribution of User Behavior Classes\",\n       x = \"User Behavior Class\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(userBehavior |&gt; drop_na(user_behavior_class, app_usage_time_min_day), \n       aes(x = user_behavior_class, y = app_usage_time_min_day, fill = user_behavior_class_label)) +\n  geom_boxplot() +\n   scale_fill_manual(\n    values = c(\n      \"Minimal User\" = \"#00B050\",   # green\n      \"Light User\"   = \"#92D050\",   # light green\n      \"Moderate User\"= \"#FFC000\",   # yellow\n      \"Heavy User\"   = \"#FF7043\",   # orange\n      \"Power User\"   = \"#C00000\"    # red\n    ),\n     name = \"User Behavior Classes\"\n   ) +\n  labs(title = \"App Usage Time by User Behavior Class\",\n       x = \"User Behavior Class\", y = \"App Usage (min/day)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nl\n\ng &lt;- ggplot(userBehavior |&gt; drop_na(app_usage_time_min_day, age_group) ,\n aes(x = age_group, y = app_usage_time_min_day, fill = age_group))\ng + geom_boxplot() +\n \n  labs(\n    title = \"App Usage by Age Group\",\n    y = \"App Usage (min/day)\",\n    x = \"Age Group\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\ng &lt;- ggplot(data = userBehavior |&gt; drop_na(gender, operating_system), aes(x = gender, fill = operating_system))\ng + geom_bar(position = \"dodge\")+\n  labs(title = \"Operating System Type by Gender\", \n       x = \"Gender\")+\n scale_fill_discrete(\"Operating System\")\n\n\n\n\n\n\n\n\n\n\n\n\n# Multivariate (Behavior class X Gender)\nggplot(userBehavior, aes(x = user_behavior_class, y = data_usage_mb_day, fill = gender)) +\n  geom_boxplot(position = position_dodge(width = 0.8)) +\n  labs(title = \"Data Usage by Behavior Class and Gender\",\n       x = \"User Behavior Class\", y = \"Data Usage (MB/day)\", fill = \"Gender\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(userBehavior, aes(x = app_usage_time_min_day, y = data_usage_mb_day, color = operating_system)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  labs(title = \"Relationship Between App Usage and Data Usage by OS\",\n       x = \"App Usage (min/day)\", y = \"Data Usage (MB/day)\", color = \"OS\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(userBehavior, aes(x = number_of_apps_installed,\n                 y = screen_on_time_hours_day,\n                 color = age_group,\n                 size = age_group,\n                 )) +\n  geom_point(alpha = 0.7, size = 3)  +\n scale_color_brewer(palette = \"Spectral\")  +\n  labs(\n    title = \"Screen Time vs Number of Apps by Age Group\",\n    x = \"Number of Apps Installed\",\n    y = \"Screen On Time (hours/day)\",\n    color = \"Age Group\",\n    \n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nl\n\ng &lt;- ggplot(userBehavior |&gt; drop_na(screen_on_time_hours_day, gender) ,\n aes(x = gender, y = screen_on_time_hours_day, fill = gender))\ng + geom_boxplot() +\n geom_jitter(width = 0.2, alpha = 0.3)+\n  labs(\n    title = \"Screen Time  by Gender\",\n    y = \"Screen On Time (hours/day)\",\n    x = \"Gender\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nuserBehavior |&gt;\n  select(user_behavior_class, app_usage_time_min_day, screen_on_time_hours_day, battery_drain_m_ah_day) |&gt;\n  pivot_longer(-user_behavior_class, names_to = \"metric\", values_to = \"value\") |&gt;\n  ggplot(aes(x = user_behavior_class, y = value, fill = user_behavior_class)) +\n  geom_boxplot() +\n  facet_wrap(~ metric, scales = \"free_y\") +\n  labs(title = \"Device Metrics by User Behavior Class\",\n       x = \"User Behavior Class\", y = \"Value\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nInsight: Reveals which devices or OS are more power-efficient under high usage.\n\nggplot(userBehavior, aes(x = battery_drain_m_ah_day,\n                 y = screen_on_time_hours_day,\n                 color = device_model)) +\n  geom_point(alpha = 0.7, size = 2.5) +\n  facet_wrap(~operating_system) +\n  labs(\n    title = \"Battery drain vs Screen Time by Operating System\",\n    x = \"Battery Drain (Min/day)\",\n    y = \"Screen On Time (hours/day)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Select numeric variables\n# Select numeric variables\nnum_vars &lt;- userBehavior %&gt;%\n  select(app_usage_time_min_day, screen_on_time_hours_day,\n         battery_drain_m_ah_day, number_of_apps_installed,\n         data_usage_mb_day, age)\n\n# Compute correlation matrix\ncor_matrix &lt;- round(cor(num_vars, use = \"pairwise.complete.obs\"), 2)\n\n# Melt for ggplot\ncor_long &lt;- melt(cor_matrix)\n\n# Plot heatmap (0 to 1 scale)\nggplot(cor_long, aes(Var1, Var2, fill = value)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = round(value, 2)), color = \"black\", size = 3) +\n  scale_fill_gradientn(\n    colours = c(\"white\", \"yellow\", \"orange\", \"red\", \"darkred\"),\n    limits  = c(0, 1),\n    name    = \"Correlation\"\n  ) +\n  labs(title = \"Heatmap of Positive Correlations (0–1)\",\n       x = NULL, y = NULL) +\n  theme_minimal(base_size = 12) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  }
]